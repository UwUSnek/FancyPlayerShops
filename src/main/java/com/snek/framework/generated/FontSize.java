package com.snek.framework.generated;
import java.util.ArrayList;
import java.util.List;




public final class FontSize{
    private static final List<Integer> widths = new ArrayList<>();
    static {
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(0);
        widths.add(4);
        widths.add(2);
        widths.add(4);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(2);
        widths.add(4);
        widths.add(4);
        widths.add(4);
        widths.add(6);
        widths.add(2);
        widths.add(6);
        widths.add(2);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(2);
        widths.add(2);
        widths.add(5);
        widths.add(6);
        widths.add(5);
        widths.add(6);
        widths.add(7);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(4);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(4);
        widths.add(6);
        widths.add(4);
        widths.add(6);
        widths.add(6);
        widths.add(3);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(5);
        widths.add(6);
        widths.add(6);
        widths.add(2);
        widths.add(6);
        widths.add(5);
        widths.add(3);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(4);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(4);
        widths.add(2);
        widths.add(4);
        widths.add(7);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(9);
        widths.add(5);
        widths.add(2);
        widths.add(6);
        widths.add(6);
        widths.add(8);
        widths.add(6);
        widths.add(2);
        widths.add(0);
        widths.add(4);
        widths.add(8);
        widths.add(5);
        widths.add(7);
        widths.add(6);
        widths.add(4);
        widths.add(8);
        widths.add(6);
        widths.add(5);
        widths.add(6);
        widths.add(5);
        widths.add(5);
        widths.add(3);
        widths.add(6);
        widths.add(7);
        widths.add(2);
        widths.add(2);
        widths.add(4);
        widths.add(5);
        widths.add(7);
        widths.add(8);
        widths.add(8);
        widths.add(8);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(10);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(4);
        widths.add(4);
        widths.add(4);
        widths.add(4);
        widths.add(7);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(10);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(3);
        widths.add(3);
        widths.add(4);
        widths.add(4);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
        widths.add(6);
    }


    /**
     * Calculates the width a string would have when rendered.
     */
    public static int getWidth(String s) {
        int r = 0;
        for(int i = 0; i < s.length(); ++i) {
            final char c = s.charAt(i);
            if(c >= 256) r += 9;
            else r += widths.get(c);
        }
        return r;
    }


    /**
     * Returns the height a line would have when rendered.
     */
    public static int getHeight() {
        return 8;
    }
}